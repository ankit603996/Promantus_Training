rm(list=ls(all=TRUE))
setwd("D:/Cognizant/Training/2 may/LinLogReg_Class_20160502")
data <- read.delim(file.choose(), header = T)
data <- read.delim(file.choose(), header = T)
summary(data)
data <- read.delim(file.choose(), header = T)
summary(data)
plot(data$Age, data$LungCap, main = "Scatterplot")
data <- read.delim(file.choose(), header = T)
summary(data)
data <- read.csv(file.choose(), header = T)
data <- read.csv(file.choose(), header = T)
summary(data)
cor(data[,c("LungCap","Age","Height")])
plot(data$Age, data$LungCap, main = "Scatterplot")
plot(data$Age, data$LungCap, main = "Scatterplot")
plot(data$Height, data$LungCap, main = "Scatterplot")
data1 = data[1:145,]
data2 = data[146:190,]
data3 = data[191:435,]
data4 = data[436:580,]
data5 = data[581:725,]
mod1 <- lm(LungCap ~ Age, data= data1)
summary(mod1)
mod2 <- lm(LungCap ~ Age, data= data2)
summary(mod2)
mod3 <- lm(LungCap ~ Age, data= data3)
summary(mod3)
plot(data$Age, data$LungCap, main = "Scatterplot")
plot(data$Age, data$LungCap, main = "Scatterplot")
rm(mod1, mod2, mod3, mod4, mod5)
rm(data1, data2, data3, data4, data5)
mod <- lm(LungCap ~ Age, data= data)
summary(mod)
attributes(mod)
mod$coefficients
mod$coef
coef(mod)
plot(data$Age, data$LungCap, main = "Scatterplot")
abline(mod, col=2, lwd = 3)
confint(mod)
confint(mod, level=0.99)
summary(mod)
data = read.csv(file = "Customer_Data.csv")
data = data[ , c("MinAgeOfChild", "City", "Churned")]
summary(data)
data$City = as.factor(as.character(data$City))
summary(data)
data$Churned <- as.factor(as.character(data$Churned))
summary(data)
data = data[data$MinAgeOfChild != 113, ]
summary(data)
set.seed(123)
rowIDs = seq(1, nrow(data), 1)
trainRowIDs = sample(rowIDs, round(.7 * length(rowIDs)))
train = data[trainRowIDs,]
test = data[-trainRowIDs,]
LogRegModel <- glm(Churned ~ MinAgeOfChild,
data=train,
family=binomial)
summary(LogRegModel)
prob <- predict(LogRegModel, type="response")
pred_class <- ifelse(prob> 0.5, 1, 0)
head(train)
head(prob)
LogRegModel <- glm(Churned ~ ., data=train, family=binomial)
summary(LogRegModel)
prob <- predict(LogRegModel, type="response")
pred_class <- ifelse(prob> 0.5, 1, 0)
setwd("D:/Cognizant/Training/2 may/LinLogReg_Class_20160502/Activity_Datasets")
bigmac <- read.csv("BigMac-NetHourlyWage.csv", header = T, sep = ",")
summary(bigmac)
names(bigmac)[2:3]<-c("Price","Wage")
summary(bigmac)
bigmaclm <- lm(bigmac$Wage~bigmac$Price,bigmac)
summary(bigmaclm)
plot(bigmac$Price,bigmac$Wage,xlab="Price",ylab="Wage")
abline(bigmaclm)  #This gives the regression line on the data
predict <- predict(bigmaclm, bigmac)
predict
yminusyhatsqre <- (bigmac$Price-predict)^2
SSE <- sum(yminusyhatsqre[1:nrow(yminusyhatsqre)])
Pred<-data.frame(predict(bigmaclm, bigmac, interval="confidence",level=0.95))
Pred
Pred_pred<-data.frame(predict(bigmaclm, bigmac, interval="prediction",level=0.95))
par(mfrow=c(1,1))
plot(bigmac$Price,bigmac$Wage)
points(bigmac$Price,Pred$fit,type="l", col="red", lwd=2)
points(bigmac$Price,Pred$lwr,pch="-", col="red", lwd=4)
points(bigmac$Price,Pred$upr,pch="-", col="red", lwd=4)
points(bigmac$Price,Pred_pred$lwr,pch="o", col="green", lwd=4)
points(bigmac$Price,Pred_pred$upr,pch="o", col="green", lwd=4)
##Null Deviance- is computed using intercept as parameter
##Residual Deviance- is computed with all the parameters in the model
##Loglikelihood is a way of estimating the probabilities given observations
##read GermanCreditData.csv
GermanCreditData<-read.csv("GermanCreditData.csv",header=T,sep=",")
summary(GermanCreditData)
GermanCredit_Numeric <- subset(x = GermanCreditData, select = c("DURATION", "AGE",
"AMOUNT"))
GermanCredit_Categorical <- GermanCreditData[,-c(2,14,23)]
str(GermanCredit_Numeric)
GermanCredit_Numeric <- data.frame(apply(X = GermanCredit_Numeric, MARGIN = 2,
FUN = as.character))
GermanCredit_Numeric <- data.frame(apply(X = GermanCredit_Numeric, MARGIN = 2,
FUN = as.character))
GermanCredit_Numeric <- data.frame(apply(X = GermanCredit_Numeric, MARGIN = 2,
FUN = as.numeric))
library(infotheo)
install.packages("infotheo")
library(infotheo)
Discretize_DURATION <- discretize(X = GermanCredit_Numeric$DURATION,
disc = "equalfreq", nbins = 5)
names(Discretize_DURATION) <- c("Binned_DURATION")
Discretize_AGE <- discretize( GermanCredit_Numeric$AGE,
disc = "equalfreq", nbins = 5)
names(Discretize_AGE) <- c("Binned_AGE")
Discretize_AMOUNT <- discretize(X = GermanCredit_Numeric$AMOUNT,
disc = "equalfreq", nbins = 5)
names(Discretize_AMOUNT) <- c("Binned_AMOUNT")
GermanCredit <- data.frame(GermanCredit_Categorical[,-1],
Discretize_DURATION,
Discretize_AGE,
Discretize_AMOUNT)
GermanCredit <- data.frame(apply(X = GermanCredit, MARGIN = 2, FUN = as.factor))
GermanCredit_Final <- na.omit(GermanCredit)
sum(is.na(GermanCredit_Final))
rm(Discretize_AGE, Discretize_AMOUNT, Discretize_DURATION, GermanCredit_Part_2)
rm(GermanCredit, GermanCredit_Categorical, GermanCredit_Numeric, GermanCredit_Part_1)
Rows <- seq(from = 1, to = nrow(GermanCredit_Final), by = 1)
set.seed(1234)
TrainRows <- sample(x = Rows, size = nrow(GermanCredit_Final) * 0.8)
TestRows <- Rows[-TrainRows]
TrainData <- GermanCredit_Final[TrainRows,]
TestData <- GermanCredit_Final[TestRows,]
table(TrainData$RESPONSE)
rm(Rows, TestRows, TrainRows)
logreg_test<-glm(RESPONSE~NEW_CAR,family="binomial",data=TrainData)
summary(logreg_test) ##The coefficients observed are in log odds which are to be converted
Alpha<-data.frame(response=TrainData$RESPONSE,prob=rep(0.7147649,length(TrainData$RESPONSE)))
Alpha$dev<-ifelse(Alpha$response==1,sqrt(-2*log(Alpha$prob)),-sqrt(-2*log(1-Alpha$prob))) ## To compute deviance
sum(Alpha$dev^2) #Which is approxmately equal to NULL Deviance value given in summary
logreg_test$fitted.values
x<-data.frame(response=TrainData$RESPONSE,prob=logreg_test$fitted.values)
x$err<-ifelse(x$response==1,log(x$prob),log(1-x$prob)) ##
sum(x$err)
summary(logreg_test) ##The coefficients observed are in log odds which are to be converted
predict(logreg_test)
predict(logreg_test, type="response")
x$Dev<-ifelse(x$response==1,sqrt(-2*log(x$prob)),-sqrt(-2*log(1-x$prob))) ## Gives residual deviance
sum(x$Dev^2) # Observe this value and Residual Deviance given in the summary output model
summary(x$Dev) ## observe this value and Residuals given in the summary output of model
summary(mod)
